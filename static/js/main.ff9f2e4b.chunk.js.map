{"version":3,"sources":["Components/Form/Form.jsx","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css"],"names":["Form","state","name","number","handleChange","event","setState","currentTarget","value","handlerSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","form_item","type","onChange","pattern","title","required","autoComplete","Component","ContactsList","contacts","handleDelete","map","contact","contacts_text","contacts_button","onClick","id","Filter","filter","filter_text","filter_input","App","data","uuidv4","changeFilter","handleFilter","normalizedFilter","toLowerCase","includes","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ff9f2e4b.chunk.js","sourcesContent":["import styles from \"./Form.module.css\";\r\nimport React, { Component } from \"react\";\r\n\r\n\r\n// Форма через функцію\r\n// const Form = ({ handlerSubmit, handleChange }) => {\r\n  \r\n//   return (\r\n//    <form className={styles.form} onSubmit={handlerSubmit}>\r\n//       <label className={styles.form_item}>\r\n//         <input\r\n//         type=\"text\"\r\n//         name=\"name\"        \r\n//         onChange={handleChange}\r\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//         required \r\n//         autoComplete=\"off\"/> Name\r\n//       </label>\r\n//       <label className={styles.form_item}>\r\n//         <input\r\n//         type=\"tel\"\r\n//         name=\"number\"\r\n//         onChange={handleChange}\r\n//         autoComplete=\"off\"\r\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//         title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//         required/> Number\r\n//       </label>\r\n//         <button type=\"submit\">Add contact</button>  \r\n//       </form> \r\n//   )\r\n// }\r\n\r\n// Форма через клас\r\nclass Form extends Component {\r\n  state = {\r\n  name: '',\r\n  number: ''\r\n  }\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    })\r\n  };  \r\n\r\n  handlerSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();   \r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  };\r\n\r\n  render() {\r\n  return ( <form className={styles.form} onSubmit={this.handlerSubmit}>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\" /> Name\r\n      </label>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          autoComplete=\"off\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required /> Number\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  )}\r\n}\r\n\r\nexport default Form;","import styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, handleDelete }) => {\r\n return (\r\n <ul>\r\n    {contacts.map((contact) => \r\n    (<li key={contact.id}>\r\n       <span className={styles.contacts_text}>{contact.name}:</span>\r\n       <span className={styles.contacts_text}>{contact.number}</span>\r\n       <button type=\"button\" className={styles.contacts_button} onClick={() => handleDelete(contact.id)}>Delete</button>\r\n    </li>)\r\n    )}          \r\n </ul>\r\n)}\r\n\r\nexport default ContactsList;","import styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n\r\n  return (\r\n    <label className={styles.filter_text}> Find contacts by name <br/>\r\n        <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChange}        \r\n        autoComplete=\"off\"/>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, {Component} from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: ''  \n  }\n\n  handlerSubmit = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }))\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  handleFilter = (event) => {\n    const { filter, contacts } = this.state;   \n    const normalizedFilter = filter.toLowerCase();    \n\n    return (\n      contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    );\n  }\n\n  handleDelete = (id) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.handleFilter()\n\n    return (\n    <>\n      <h1>Phonebook</h1>\n      {/* <Form handlerSubmit={this.handlerSubmit} handleChange={this.handleChange}/> форма через функцію */}\n      <Form onSubmit={this.handlerSubmit}/>\n      <h2>Contacts</h2>\n      <Filter handleChange={this.changeFilter} filter={this.state.filter}/>      \n      <ContactsList contacts={filteredContacts} handleDelete={this.handleDelete}/>\n    </>  \n  );\n}}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1IwBU\",\"form_item\":\"Form_form_item__3N0cT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_button\":\"ContactsList_contacts_button__2_csk\",\"contacts_text\":\"ContactsList_contacts_text__2IDda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__1V_Q2\",\"filter_input\":\"Filter_filter_input__1tOjJ\"};"],"sourceRoot":""}